<?php 
$this->render('downloads/downloads/sidebar');
$this->render('downloads/downloads/code-highlighting');
$headTitle = $this->headTitle();
$headTitle->prepend('Downloads');
$headTitle->prepend('Skeleton Application');
?>
<section class="downloads">
    <h1>Get the Skeleton Application</h1>

    <p>
        This is a simple, skeleton application using the ZF2 MVC layer and module
        systems. This application is meant to be used as a starting place for those
        looking to get their feet wet with ZF2.
    </p>

    <h2>Installation</h2>

    <h3>Using Composer (recommended)</h3>

    <p>
        The recommended way to get a working copy of this project is to clone 
        the repository and use composer to install dependencies:
    </p>

    <div class="example"><pre><code class="highlight bash">
cd my/project/dir
git clone git://github.com/zendframework/ZendSkeletonApplication.git
cd ZendSkeletonApplication
php composer.phar install
    </code></pre></div>

    <p>
        Instead of cloning, you can also grab a <a 
        href="https://github.com/zendframework/ZendSkeletonApplication/tarball/master">tarball</a> 
        or <a href="https://github.com/zendframework/ZendSkeletonApplication/zipball/master">zipball</a>, 
        unpack it, and then run Composer within the newly created directory.
    </p>

    <h3>Using Git submodules</h3>

    <p>
        Alternatively, you can install using native git submodules:
    </p>

    <div class="example"><pre><code class="highlight bash">
git clone git://github.com/zendframework/ZendSkeletonApplication.git --recursive
    </code></pre></div>


    <h2>Testing it</h2>

    Once you have the skeleton applicaion installed, verify that it works.

    <h3>Virtual host</h3>

    <p>
        Set up a virtual host to point to the "public/" directory of the
        project and you should be ready to go!
    </p>

    <h3>PHP 5.4 built-in server</h3>

    <p>
        Enter the "public/" directory, and start up the web server. As an
        example, the following will start the server on port 8888; you would
        then browse to "http://localhost:8888/" to test the application:
    </p>

    <div class="example"><pre><code class="highlight bash">
cd public
php -S localhost:8888
    </code></pre></div>

    <h2>Next steps</h2>

    <p>
        Don't know what to do next? <a href="<?php echo $this->manualUrl('user-guide/overview.html') ?>">Read the user guide!</a>
    </p>
</section>
